name: Deploy instead of jenkins
on:
  push:
    branches:
      - develop
      - staging
      - master
      # workflow_dispatchはデフォルトブランチに置くまで使えないので開発中の便宜
      - check-deploy-dev
  workflow_dispatch:
    inputs:
      env:
        type: environment
        description: 'Target environment'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  set-env:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      deploy_env: ${{ steps.choose-env.outputs.value }}
    steps:
      - name: choose-env
        id: choose-env
        run: |
          if [[ -n "${{ github.event.inputs.env }}" ]]
          then
            echo "value=${{ github.event.inputs.env }}" >> $GITHUB_OUTPUT
          else
            case "$GITHUB_REF_NAME" in
              staging)
                echo "value=staging" >> $GITHUB_OUTPUT
                ;;
              master)
                echo "value=production" >> $GITHUB_OUTPUT
                ;;
              *)
                echo "value=development" >> $GITHUB_OUTPUT
                ;;
            esac
          fi

  gen-matrix:
    needs: [set-env]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      # environment.nameで使えるcontextが限定されているのとデフォルトブランチに置くまでworkflow_dispatchが使えないことに起因する回避
      name: ${{ needs.set-env.outputs.deploy_env }}
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.value }}
    steps:
      - name: gen-matrix
        id: gen-matrix
        run: |
          echo "value=$(echo "${{ vars.TARGET_HOSTS }}" | jq -R '{"host": split(",")}' | jq -c)" >> $GITHUB_OUTPUT

  deploy:
    needs: [set-env, gen-matrix]
    timeout-minutes: 15
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.host }}
    concurrency:
      group: ${{ needs.set-env.outputs.deploy_env }}
      cancel-in-progress: false
    environment:
      name: ${{ needs.set-env.outputs.deploy_env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: deploy to ${{ needs.set-env.outputs.deploy_env }} on ${{ matrix.host }}
        run: |
          BRANCH="${{ vars.BRANCH }}" ENV="${{ vars.ENV }}" ./deploy.sh
          exit 1
      - name: error notification
        if: failure()
        uses: ./.github/actions/notify-teams
        with:
          text: |
            Deploy ${{ github.repository }} failed on ${{ matrix.host }}
            [${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          webhook-url: ${{ secrets.TEAMS_WEBHOOK_URL }}
